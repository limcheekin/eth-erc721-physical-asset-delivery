{
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SmartCheck",
          "fullDescription": {
            "text": "Securify automatically checks for vulnerabilities and bad coding practices. It runs lexical and syntactical analysis on Solidity source code."
          },
          "informationUri": "https://tool.smartdec.net/",
          "rules": [
            {
              "id": "Ignore_19",
              "name": "IgnoreVulnerability",
              "shortDescription": {
                "text": "SOLIDITY_ADDRESS_HARDCODED"
              }
            },
            {
              "id": "Other_19",
              "name": "OtherVulnerability",
              "shortDescription": {
                "text": "SOLIDITY_LOCKED_MONEY"
              }
            },
            {
              "id": "Ignore_28",
              "name": "IgnoreVulnerability",
              "shortDescription": {
                "text": "SOLIDITY_PRAGMAS_VERSION"
              }
            },
            {
              "id": "Ignore_29",
              "name": "IgnoreVulnerability",
              "shortDescription": {
                "text": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA"
              }
            },
            {
              "id": "Ignore_38",
              "name": "IgnoreVulnerability",
              "shortDescription": {
                "text": "SOLIDITY_VISIBILITY"
              }
            }
          ],
          "version": "0.0.12"
        }
      },
      "artifacts": [
        {
          "location": {
            "uri": "/home/runner/work/eth-erc721-physical-asset-delivery/eth-erc721-physical-asset-delivery/contracts/PhysicalAssetToken.sol"
          },
          "sourceLanguage": "Solidity"
        }
      ],
      "logicalLocations": [
        {
          "kind": "contract",
          "name": "PhysicalAssetToken"
        }
      ],
      "results": [
        {
          "message": {
            "text": "SOLIDITY_ADDRESS_HARDCODED"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/home/runner/work/eth-erc721-physical-asset-delivery/eth-erc721-physical-asset-delivery/contracts/PhysicalAssetToken.sol"
                },
                "region": {
                  "snippet": {
                    "text": "0x2a55205a"
                  },
                  "startColumn": 52,
                  "startLine": 12
                }
              }
            }
          ],
          "ruleId": "Ignore_19"
        },
        {
          "message": {
            "text": "SOLIDITY_LOCKED_MONEY"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/home/runner/work/eth-erc721-physical-asset-delivery/eth-erc721-physical-asset-delivery/contracts/PhysicalAssetToken.sol"
                },
                "region": {
                  "snippet": {
                    "text": "contractPhysicalAssetTokenisERC721URIStorage,Ownable,RoyaltiesV2Impl{bytes4privateconstant_INTERFACE_ID_ERC2981=0x2a55205a;usingCountersforCounters.Counter;Counters.Counterprivate_tokenIds;mapping(uint256=>uint256)publictokenLockedFromTimestamp;mapping(uint256=>bytes32)publictokenUnlockCodeHashes;mapping(uint256=>bool)publictokenUnlocked;eventTokenUnlocked(uint256tokenId,addressunlockerAddress);constructor()ERC721(\"PhysicalAssetToken\",\"PA\"){}function_beforeTokenTransfer(addressfrom,addressto,uint256tokenId)internaloverride{require(tokenLockedFromTimestamp[tokenId]>block.timestamp||tokenUnlocked[tokenId],\"PhysicalAssetToken: Token locked\");super._beforeTokenTransfer(from,to,tokenId);}functionunlockToken(bytes32unlockHash,uint256tokenId)public{require(msg.sender==ownerOf(tokenId),\"PhysicalAssetToken: Only the Owner can unlock the Token\");require(keccak256(abi.encode(unlockHash))==tokenUnlockCodeHashes[tokenId],\"PhysicalAssetToken: Unlock Code Incorrect\");tokenUnlocked[tokenId]=true;emitTokenUnlocked(tokenId,msg.sender);}functionmint(addressto,stringmemorymetadataURI,uint256lockedFromTimestamp,bytes32unlockHash)publiconlyOwner{uint256id=_tokenIds.current();tokenLockedFromTimestamp[id]=lockedFromTimestamp;tokenUnlockCodeHashes[id]=unlockHash;super._mint(to,id);super._setTokenURI(id,metadataURI);_tokenIds.increment();}functionsetRoyalties(uint256_tokenId,address<missing ')'>payable_royaltiesReceipientAddress,uint96_percentageBasisPoints)publiconlyOwner{LibPart.Part[]memory_royalties=newLibPart.Part[](1);_royalties[0].value=_percentageBasisPoints;_royalties[0].account=_royaltiesReceipientAddress;_saveRoyalties(_tokenId,_royalties);}"
                  },
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "ruleId": "Other_19"
        },
        {
          "message": {
            "text": "SOLIDITY_PRAGMAS_VERSION"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/home/runner/work/eth-erc721-physical-asset-delivery/eth-erc721-physical-asset-delivery/contracts/PhysicalAssetToken.sol"
                },
                "region": {
                  "snippet": {
                    "text": "^"
                  },
                  "startColumn": 16,
                  "startLine": 2
                }
              }
            }
          ],
          "ruleId": "Ignore_28"
        },
        {
          "message": {
            "text": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/home/runner/work/eth-erc721-physical-asset-delivery/eth-erc721-physical-asset-delivery/contracts/PhysicalAssetToken.sol"
                },
                "region": {
                  "snippet": {
                    "text": "private"
                  },
                  "startColumn": 11,
                  "startLine": 12
                }
              }
            }
          ],
          "ruleId": "Ignore_29"
        },
        {
          "message": {
            "text": "SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/home/runner/work/eth-erc721-physical-asset-delivery/eth-erc721-physical-asset-delivery/contracts/PhysicalAssetToken.sol"
                },
                "region": {
                  "snippet": {
                    "text": "private"
                  },
                  "startColumn": 21,
                  "startLine": 14
                }
              }
            }
          ],
          "ruleId": "Ignore_29"
        },
        {
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/home/runner/work/eth-erc721-physical-asset-delivery/eth-erc721-physical-asset-delivery/contracts/PhysicalAssetToken.sol"
                },
                "region": {
                  "snippet": {
                    "text": "constructor()ERC721(\"PhysicalAssetToken\",\"PA\"){}"
                  },
                  "startColumn": 4,
                  "startLine": 22
                }
              }
            }
          ],
          "ruleId": "Ignore_38"
        },
        {
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/home/runner/work/eth-erc721-physical-asset-delivery/eth-erc721-physical-asset-delivery/contracts/PhysicalAssetToken.sol"
                },
                "region": {
                  "snippet": {
                    "text": "functionsetRoyalties(uint256_tokenId,address<missing ')'>payable"
                  },
                  "startColumn": 4,
                  "startLine": 68
                }
              }
            }
          ],
          "ruleId": "Ignore_38"
        },
        {
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/home/runner/work/eth-erc721-physical-asset-delivery/eth-erc721-physical-asset-delivery/contracts/PhysicalAssetToken.sol"
                },
                "region": {
                  "snippet": {
                    "text": "_royaltiesReceipientAddress,"
                  },
                  "startColumn": 24,
                  "startLine": 70
                }
              }
            }
          ],
          "ruleId": "Ignore_38"
        },
        {
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/home/runner/work/eth-erc721-physical-asset-delivery/eth-erc721-physical-asset-delivery/contracts/PhysicalAssetToken.sol"
                },
                "region": {
                  "snippet": {
                    "text": "uint96_percentageBasisPoints)public"
                  },
                  "startColumn": 8,
                  "startLine": 71
                }
              }
            }
          ],
          "ruleId": "Ignore_38"
        },
        {
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/home/runner/work/eth-erc721-physical-asset-delivery/eth-erc721-physical-asset-delivery/contracts/PhysicalAssetToken.sol"
                },
                "region": {
                  "snippet": {
                    "text": "onlyOwner{LibPart."
                  },
                  "startColumn": 13,
                  "startLine": 72
                }
              }
            }
          ],
          "ruleId": "Ignore_38"
        },
        {
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/home/runner/work/eth-erc721-physical-asset-delivery/eth-erc721-physical-asset-delivery/contracts/PhysicalAssetToken.sol"
                },
                "region": {
                  "snippet": {
                    "text": "Part[]memory_royalties=newLibPart.Part[](1);"
                  },
                  "startColumn": 16,
                  "startLine": 73
                }
              }
            }
          ],
          "ruleId": "Ignore_38"
        },
        {
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/home/runner/work/eth-erc721-physical-asset-delivery/eth-erc721-physical-asset-delivery/contracts/PhysicalAssetToken.sol"
                },
                "region": {
                  "snippet": {
                    "text": "_royalties[0].value=_percentageBasisPoints;"
                  },
                  "startColumn": 8,
                  "startLine": 74
                }
              }
            }
          ],
          "ruleId": "Ignore_38"
        },
        {
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/home/runner/work/eth-erc721-physical-asset-delivery/eth-erc721-physical-asset-delivery/contracts/PhysicalAssetToken.sol"
                },
                "region": {
                  "snippet": {
                    "text": "_royalties[0].account=_royaltiesReceipientAddress;"
                  },
                  "startColumn": 8,
                  "startLine": 75
                }
              }
            }
          ],
          "ruleId": "Ignore_38"
        },
        {
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/home/runner/work/eth-erc721-physical-asset-delivery/eth-erc721-physical-asset-delivery/contracts/PhysicalAssetToken.sol"
                },
                "region": {
                  "snippet": {
                    "text": "_saveRoyalties(_tokenId,"
                  },
                  "startColumn": 8,
                  "startLine": 76
                }
              }
            }
          ],
          "ruleId": "Ignore_38"
        },
        {
          "message": {
            "text": "SOLIDITY_VISIBILITY"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/home/runner/work/eth-erc721-physical-asset-delivery/eth-erc721-physical-asset-delivery/contracts/PhysicalAssetToken.sol"
                },
                "region": {
                  "snippet": {
                    "text": "_royalties);"
                  },
                  "startColumn": 33,
                  "startLine": 76
                }
              }
            }
          ],
          "ruleId": "Ignore_38"
        }
      ]
    }
  ],
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json"
}